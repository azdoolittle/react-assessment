//Please enter your First and Last Name

//What is the key architectural difference between a JavaScript library such as React and a JavaScript framework such as Angular? How would that impact the decision for a project to use one versus the other?

//At a high level, what is the virtual DOM (VDOM) and how does React use it to render to the DOM?

//Explain the purpose of render() in React

//What is a state in React? How are states used in React?

//How can you update the state of a component?

//What are Props in React? How are they passed?

//What is the significance of keys in React? Give an example of when a bad key causes an error.

//What is the significance of refs in React?

//Explain how you would optimize a React application. In particular, If you were working on a React application that was rendering a page very slowly, how would you go about investigating and fixing the issue?

//What are the most common approaches for styling a React application?

//If you wanted a component to perform an action only once when the component initially rendered, how would you achieve this with a class component? How would you achieve it with a function component?

//How can automated tooling be used to improve the accessibility of a React application?

//Explain the importance of shallow rendering when building complex React applications.

//Explain the positives and negatives of shallow rendering components in tests.

//What is the StrictMode component and why would you use it?

//Why do class methods need to be bound to a class instance, and how can you avoid the need for binding?

//What is prop drilling and how can you avoid it?

//How might React handle or restrict Props to certain types, or require certain Props to exist?

//What are pure functional Components?

//What are Higher Order Components(HOC)?

//How would you create Higher Order Components (HOCs) in React?

//What can you do with HOC?

//Give a simple example of a HOC that creates a red border for a Button component.

//Explain the standard JavaScript toolchain, transpilation (via Babel or other compilers), JSX, and these itemsâ€™ significance in recent development. What sort of tools might you use in the build steps to optimize the compiled output React code?

//Show the difference between React's ES6 syntax when compared to ES5. In particular please provide code examples that show the differences between:
  //Require vs import
  //Export vs export
  //Component and function
  //Props
  //State

//How can you embed two or more components into one?

//Explain Flux

//What is Redux?
Redux is a simpler statement management library that originated from Flux.

//What are the three principles that Redux follows?

//Explain the "Single source of truth" as it applies to Redux

//List and explain the components of Redux

//Provide a simple snippet of code to show how an Action is defined in Redux.

//Explain the role of the Reducer in Redux.

//Explain the significance of a Store in Redux.

//How are Redux and Flux different?

//Explain the advantages of Redux

//Explain the advantages of Test Driven Development.

//How would you go about testing your React components? Your entire application? What tools might you use?

//Explain the concept of Hooks in React. Compare with Redux. Which would you choose to use in development of a new React application?
